{"version":3,"sources":["components/FeedbackOptions/FeadbackOptions.module.css","components/Feedback/Feedback.module.css","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Feedback/Feedback.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","btns","map","option","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","list","Section","title","children","Feedback","state","event","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","container","Object","keys","this","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,KAAO,8BAA8B,KAAO,8BAA8B,QAAU,iCAAiC,IAAM,+B,gBCA7ID,EAAOC,QAAU,CAAC,UAAY,8B,mBCA9BD,EAAOC,QAAU,CAAC,KAAO,2B,qLCEV,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC/C,OACI,qBAAKC,UAAaC,IAAEC,KAApB,SACKJ,EAAQK,KAAI,SAAAC,GAAM,OACf,wBAASJ,UAAWC,IAAEG,GAAUC,KAAK,SAAsBC,KAAMF,EAAQG,QAASR,EAAlF,SAAsGK,GAAnDA,Q,oBCJpD,SAASI,EAAT,GAAsE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAC3D,OACID,EAAQ,EAAI,qBAAIZ,UAAWC,IAAEa,KAAjB,UACR,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,UAEN,oBCVS,SAASE,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACI,gCACA,6BAAKD,IACAC,K,oBCqDEC,E,4MAnDXC,MAAQ,CACJV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTZ,gBAAkB,SAACqB,GACW,SAAtBA,EAAMC,OAAOf,KACb,EAAKgB,UAAS,SAAAC,GAAS,MAAK,CAC5Bd,KAAMc,EAAUd,KAAO,MAEM,YAAtBW,EAAMC,OAAOf,KACpB,EAAKgB,UAAS,SAAAC,GAAS,MAAK,CAC5Bb,QAASa,EAAUb,QAAU,MAEA,QAAtBU,EAAMC,OAAOf,MACpB,EAAKgB,UAAS,SAAAC,GAAS,MAAK,CAC5BZ,IAAKY,EAAUZ,IAAM,O,EAK7Ba,mBAAqB,WAEjB,OADc,EAAKL,MAAMV,KAAO,EAAKU,MAAMT,QAAU,EAAKS,MAAMR,K,EAIpEc,gCAAkC,WAE9B,OAD2BC,KAAKC,MAAyB,IAAlB,EAAKR,MAAMV,KAAc,EAAKe,uB,4CAIzE,WACI,OACA,sBAAKxB,UAAWC,IAAE2B,UAAlB,UACI,cAACb,EAAD,CAASC,MAAM,wBAAwBhB,UAAaC,IAAEe,MAAtD,SACI,cAACnB,EAAD,CAAiBC,QAAS+B,OAAOC,KAAKC,KAAKZ,OAAQpB,gBAAiBgC,KAAKhC,oBAE7E,cAACgB,EAAD,CAASC,MAAM,aAAf,SACI,cAACR,EAAD,CACAC,KAAMsB,KAAKZ,MAAMV,KACjBC,QAASqB,KAAKZ,MAAMT,QACpBC,IAAKoB,KAAKZ,MAAMR,IAChBC,MAAOmB,KAAKP,qBACZX,mBAAoBkB,KAAKN,6C,GA9ClBO,aCORC,EAPJ,WACT,OAEE,cAAC,EAAD,KCGWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,M","file":"static/js/main.afc35bc1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btns\":\"FeadbackOptions_btns__3uqNI\",\"good\":\"FeadbackOptions_good__3PK4-\",\"neutral\":\"FeadbackOptions_neutral__9-9QK\",\"bad\":\"FeadbackOptions_bad__3ecWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Feedback_container__1KHMR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__qMAXH\"};","import PropTypes from 'prop-types';\r\nimport s from'../FeedbackOptions/FeadbackOptions.module.css'\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n    return (\r\n        <div className = {s.btns}>\r\n            {options.map(option => (\r\n                <button  className={s[option]}  type=\"button\" key={option} name={option} onClick={onLeaveFeedback}  >{option  }</button>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array,\r\n    onLeaveFeedback: PropTypes.func,\r\n}","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nexport default function Statistics({good, neutral, bad, total, positivePercentage}) {\r\n    return (\r\n        total > 0 ? <ul className={s.list}>\r\n            <li>Good: {good}</li>\r\n            <li>Neutral: {neutral}</li>\r\n            <li>Bad: {bad}</li>\r\n            <li>Total: {total}</li>\r\n            <li>Positive feedback: {positivePercentage}%</li>\r\n        </ul>\r\n    : 'No feedback given'\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number,\r\n}","import PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n    return (\r\n        <div>\r\n        <h1>{title}</h1>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node\r\n}","import React, {Component} from 'react';\r\nimport FeedbackOptions  from \"../FeedbackOptions\";\r\nimport Statistics from \"../Statistics\";\r\nimport Section from \"../Section\";\r\nimport s from './Feedback.module.css';\r\n\r\nclass Feedback extends Component {\r\n\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    }\r\n\r\n    onLeaveFeedback = (event) => {\r\n        if (event.target.name === \"good\") {\r\n            this.setState(prevState => ({\r\n            good: prevState.good + 1\r\n        }))\r\n        } else if (event.target.name === \"neutral\") {\r\n            this.setState(prevState => ({\r\n            neutral: prevState.neutral + 1\r\n        }))\r\n        } else if (event.target.name === \"bad\") {\r\n            this.setState(prevState => ({\r\n            bad: prevState.bad + 1\r\n        }))\r\n        }\r\n    }\r\n\r\n    countTotalFeedback = () => {\r\n        const total = this.state.good + this.state.neutral + this.state.bad\r\n        return total\r\n    }\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        const positivePercentage = Math.round((this.state.good * 100) / this.countTotalFeedback())\r\n        return positivePercentage\r\n    }\r\n\r\n    render() { \r\n        return(\r\n        <div className={s.container}>\r\n            <Section title='Please leave feedback' className = {s.title}>\r\n                <FeedbackOptions options={Object.keys(this.state)} onLeaveFeedback={this.onLeaveFeedback}/>\r\n            </Section>\r\n            <Section title='Statistics'>\r\n                <Statistics\r\n                good={this.state.good}\r\n                neutral={this.state.neutral}\r\n                bad={this.state.bad}\r\n                total={this.countTotalFeedback()}\r\n                positivePercentage={this.countPositiveFeedbackPercentage()} />\r\n            </Section>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Feedback;","import React from 'react';\n\nimport './App.css';\nimport Feedback from './components/Feedback/Feedback';\n\n\nconst App =()=> {\n  return (\n   \n    <Feedback/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}